{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A\\\\Desktop\\\\gallery\\\\src\\\\components\\\\Landingpage.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { GridContextProvider, GridDropZone, GridItem, swap } from 'react-grid-dnd';\nimport { Button } from 'rsuite';\nimport image1 from '../assets/images/T1It0qMA.png';\nimport image2 from '../assets/images/U6OVh27Q.png';\nimport image4 from '../assets/images/iegS0M-g.png';\nimport image5 from '../assets/images/z90_d-Pg.png';\nimport Imageupload from './Imageupload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Landingpage() {\n  _s();\n  const [selectedImages, setSelectedImages] = useState([]);\n  const handleImageSelect = imageId => {\n    if (selectedImages.includes(imageId)) {\n      setSelectedImages(selectedImages.filter(id => id !== imageId));\n    } else {\n      setSelectedImages([...selectedImages, imageId]);\n    }\n    console.log(imageId);\n  };\n  const imageSources = [{\n    id: 1,\n    src: image1\n  }, {\n    id: 2,\n    src: image2\n  }, {\n    id: 3,\n    src: image4\n  }, {\n    id: 4,\n    src: image5\n  }, {\n    id: 5,\n    src: image4\n  }, {\n    id: 6,\n    src: image5\n  }\n  // Add more images as needed\n  ];\n\n  const [imageList, setImageList] = useState(imageSources);\n  const handleImageUpload = newImages => {\n    Array.from(newImages).forEach((image, index) => {\n      // You can use FileReader to read each uploaded image and generate a URL for it.\n      const reader = new FileReader();\n      reader.onload = () => {\n        const uploadedImage = {\n          id: imageList.length + Math.random() + index + 1,\n          // Assign a unique ID\n          src: reader.result\n        };\n        setImageList(prevImageList => [...prevImageList, uploadedImage]);\n      };\n      reader.readAsDataURL(image);\n    });\n  };\n\n  // const handleDragEnd = (result) => {\n  //     if (!result.destination) {\n  //         return;\n  //     }\n\n  //     const reorderedImages = [...imageList];\n  //     const [movedImage] = reorderedImages.splice(result.source.index, 1);\n  //     reorderedImages.splice(result.destination.index, 0, movedImage);\n\n  //     setImageList(reorderedImages);\n  // };\n  const handleImageRemove = selectedImageIds => {\n    const updatedImageList = imageList.filter(image => !selectedImageIds.includes(image.id));\n    setImageList(updatedImageList);\n  };\n  const onChange = (sourceId, sourceIndex, targetIndex) => {\n    const nextState = swap(imageList, sourceIndex, targetIndex);\n    setImageList(nextState);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(Imageupload, {\n      onImageUpload: handleImageUpload,\n      onImageRemove: handleImageRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleImageRemove(selectedImages),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid rounded rounded-1 yellow-border\",\n          src: imageList[0].src,\n          alt: \"featured\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: /*#__PURE__*/_jsxDEV(GridContextProvider, {\n          onChange: onChange,\n          children: /*#__PURE__*/_jsxDEV(GridDropZone, {\n            id: \"items\",\n            boxesPerRow: 4,\n            rowHeight: 300,\n            style: {\n              height: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: imageList.map((item, index) => /*#__PURE__*/_jsxDEV(GridItem, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"position-relative \",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: `img-fluid  rounded rounded-1 m-1 ${index === 0 ? 'yellow-border' : 'border'}`,\n                    src: item.src,\n                    alt: ` ${index}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"position-absolute\",\n                    type: \"checkbox\",\n                    checked: selectedImages.includes(item.id),\n                    onChange: () => handleImageSelect(item.id),\n                    style: {\n                      zIndex: '10',\n                      top: '8px',\n                      right: '2px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 41\n                }, this)\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), \"}\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"V58cDOg+9X9dofuUonAdis0iALk=\");\n_c = Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useState","Col","Container","Row","GridContextProvider","GridDropZone","GridItem","swap","Button","image1","image2","image4","image5","Imageupload","jsxDEV","_jsxDEV","Landingpage","_s","selectedImages","setSelectedImages","handleImageSelect","imageId","includes","filter","id","console","log","imageSources","src","imageList","setImageList","handleImageUpload","newImages","Array","from","forEach","image","index","reader","FileReader","onload","uploadedImage","length","Math","random","result","prevImageList","readAsDataURL","handleImageRemove","selectedImageIds","updatedImageList","onChange","sourceId","sourceIndex","targetIndex","nextState","className","children","onImageUpload","onImageRemove","fileName","_jsxFileName","lineNumber","columnNumber","onClick","md","alt","boxesPerRow","rowHeight","style","height","map","item","type","checked","zIndex","top","right","_c","$RefreshReg$"],"sources":["C:/Users/A/Desktop/gallery/src/components/Landingpage.jsx"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useState } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { GridContextProvider, GridDropZone, GridItem, swap } from 'react-grid-dnd';\r\nimport { Button } from 'rsuite';\r\nimport image1 from '../assets/images/T1It0qMA.png';\r\nimport image2 from '../assets/images/U6OVh27Q.png';\r\nimport image4 from '../assets/images/iegS0M-g.png';\r\nimport image5 from '../assets/images/z90_d-Pg.png';\r\nimport Imageupload from './Imageupload';\r\n\r\nexport default function Landingpage() {\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n    const handleImageSelect = (imageId) => {\r\n        if (selectedImages.includes(imageId)) {\r\n            setSelectedImages(selectedImages.filter((id) => id !== imageId));\r\n        } else {\r\n            setSelectedImages([...selectedImages, imageId]);\r\n        }\r\n        console.log(imageId);\r\n    };\r\n\r\n    const imageSources = [\r\n        {\r\n            id: 1,\r\n            src: image1,\r\n        },\r\n        {\r\n            id: 2,\r\n            src: image2,\r\n        },\r\n        {\r\n            id: 3,\r\n            src: image4,\r\n        },\r\n        {\r\n            id: 4,\r\n            src: image5,\r\n        },\r\n        {\r\n            id: 5,\r\n            src: image4,\r\n        },\r\n        {\r\n            id: 6,\r\n            src: image5,\r\n        },\r\n        // Add more images as needed\r\n    ];\r\n\r\n    const [imageList, setImageList] = useState(imageSources);\r\n    const handleImageUpload = (newImages) => {\r\n        Array.from(newImages).forEach((image, index) => {\r\n            // You can use FileReader to read each uploaded image and generate a URL for it.\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                const uploadedImage = {\r\n                    id: imageList.length + Math.random() + index + 1, // Assign a unique ID\r\n                    src: reader.result,\r\n                };\r\n                setImageList((prevImageList) => [...prevImageList, uploadedImage]);\r\n            };\r\n            reader.readAsDataURL(image);\r\n        });\r\n    };\r\n\r\n    // const handleDragEnd = (result) => {\r\n    //     if (!result.destination) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     const reorderedImages = [...imageList];\r\n    //     const [movedImage] = reorderedImages.splice(result.source.index, 1);\r\n    //     reorderedImages.splice(result.destination.index, 0, movedImage);\r\n\r\n    //     setImageList(reorderedImages);\r\n    // };\r\n    const handleImageRemove = (selectedImageIds) => {\r\n        const updatedImageList = imageList.filter((image) => !selectedImageIds.includes(image.id));\r\n        setImageList(updatedImageList);\r\n    };\r\n\r\n    const onChange = (sourceId: string, sourceIndex: number, targetIndex: number) => {\r\n        const nextState = swap(imageList, sourceIndex, targetIndex);\r\n        setImageList(nextState);\r\n    };\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Imageupload onImageUpload={handleImageUpload} onImageRemove={handleImageRemove} />\r\n            <Button onClick={() => handleImageRemove(selectedImages)}>Delete</Button>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <img\r\n                        className=\"img-fluid rounded rounded-1 yellow-border\"\r\n                        src={imageList[0].src}\r\n                        alt=\"featured\"\r\n                    />\r\n                </Col>\r\n                <Col md={9}>\r\n                    <GridContextProvider onChange={onChange}>\r\n                        <GridDropZone\r\n                            id=\"items\"\r\n                            boxesPerRow={4}\r\n                            rowHeight={300}\r\n                            style={{ height: '400px' }}\r\n                        >\r\n                            <div>\r\n                                {imageList.map((item, index) => (\r\n                                    <GridItem key={item.id}>\r\n                                        <div className=\"position-relative \">\r\n                                            <img\r\n                                                className={`img-fluid  rounded rounded-1 m-1 ${\r\n                                                    index === 0 ? 'yellow-border' : 'border'\r\n                                                }`}\r\n                                                src={item.src}\r\n                                                alt={` ${index}`}\r\n                                            />\r\n                                            <input\r\n                                                className=\"position-absolute\"\r\n                                                type=\"checkbox\"\r\n                                                checked={selectedImages.includes(item.id)}\r\n                                                onChange={() => handleImageSelect(item.id)}\r\n                                                style={{\r\n                                                    zIndex: '10',\r\n                                                    top: '8px',\r\n                                                    right: '2px',\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </GridItem>\r\n                                ))}\r\n                            </div>\r\n                            }\r\n                        </GridDropZone>\r\n                    </GridContextProvider>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}