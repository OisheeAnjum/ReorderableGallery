{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A\\\\Desktop\\\\gallery\\\\src\\\\components\\\\Landingpage.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { GridContextProvider, GridDropZone, GridItem, swap } from 'react-grid-dnd';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { Button, Modal } from 'rsuite';\nimport image1 from '../assets/images/T1It0qMA.png';\nimport image2 from '../assets/images/U6OVh27Q.png';\nimport image4 from '../assets/images/iegS0M-g.png';\nimport image5 from '../assets/images/z90_d-Pg.png';\nimport Imageupload from './Imageupload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Landingpage() {\n  _s();\n  const {\n    small\n  } = useSelector(state => state.device);\n  const imageSources = [{\n    id: 1,\n    src: image1\n  }, {\n    id: 2,\n    src: image2\n  }, {\n    id: 3,\n    src: image4\n  }, {\n    id: 4,\n    src: image5\n  }, {\n    id: 5,\n    src: image4\n  }, {\n    id: 6,\n    src: image5\n  }];\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const [imageList, setImageList] = useState(imageSources);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [scrollDisabled, setScrollDisabled] = useState(false);\n\n  // Disable window scrolling when dragging starts\n  useEffect(() => {\n    const disableScroll = e => {\n      if (e.type === 'touchmove') {\n        e.preventDefault();\n      }\n    };\n    if (scrollDisabled) {\n      window.addEventListener('touchmove', disableScroll, {\n        passive: false\n      });\n    }\n    return () => {\n      window.removeEventListener('touchmove', disableScroll);\n    };\n  }, [scrollDisabled]);\n  const handleImageSelect = imageId => {\n    if (selectedImages.includes(imageId)) {\n      setSelectedImages(selectedImages.filter(id => id !== imageId));\n    } else {\n      setSelectedImages([...selectedImages, imageId]);\n    }\n  };\n  const baseHeight = 150;\n  const calculatedHeight = `${small ? baseHeight + Math.floor((imageList.length - 1) / 4) * 50 : baseHeight + Math.floor((imageList.length - 1) / 4) * 160}px`;\n  const handleImageUpload = newImages => {\n    Array.from(newImages).forEach((image, index) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const uploadedImage = {\n          id: imageList.length + Math.random() + index + 1,\n          // Assign a unique ID\n          src: reader.result\n        };\n        setImageList(prevImageList => [...prevImageList, uploadedImage]);\n      };\n      reader.readAsDataURL(image);\n    });\n  };\n  const handleImageRemove = selectedImageIds => {\n    if (selectedImageIds.length === 0) {\n      /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Images Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this);\n    } else {\n      const updatedImageList = imageList.filter(image => !selectedImageIds.includes(image.id));\n      setImageList(updatedImageList);\n      toast.success('Images Deleted successfully');\n      handleClose();\n      setSelectedImages([]);\n    }\n  };\n  const onChange = (sourceId, sourceIndex, targetIndex) => {\n    setScrollDisabled(true);\n    const nextState = swap(imageList, sourceIndex, targetIndex);\n    setImageList(nextState);\n\n    // Enable window scrolling after a short delay\n    setTimeout(() => {\n      setScrollDisabled(false);\n    }, 100); // You can adjust the delay as needed\n  };\n\n  console.log(scrollDisabled);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" navbar ps-1 ps-md-2 pe-2 pe-md-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `container d-flex justify-content-end ${small ? 'px-0' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(Imageupload, {\n          onImageUpload: handleImageUpload,\n          onImageRemove: handleImageRemove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"custom-button\",\n          appearance: \"primary\",\n          onClick: handleOpen,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5 mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"yellow-border d-flex justify-content-center align-items-center w-100\",\n            style: {\n              minHeight: small ? '14rem' : '10rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-fluid rounded rounded-1 \",\n              src: imageList[0].src,\n              alt: \"featured\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 9,\n          children: /*#__PURE__*/_jsxDEV(GridContextProvider, {\n            onChange: onChange,\n            children: /*#__PURE__*/_jsxDEV(GridDropZone, {\n              id: \"items\",\n              boxesPerRow: 4,\n              rowHeight: small ? 90 : 140,\n              style: {\n                height: calculatedHeight\n              },\n              children: imageList.map((item, index) => /*#__PURE__*/_jsxDEV(GridItem, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `position-relative d-flex justify-content-center align-items-center rounded rounded-1 m-1 ${index === 0 ? 'yellow-border' : 'border'}`,\n                  style: {\n                    height: small ? '5rem' : '8rem',\n                    cursor: '-webkit-grab'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"img-fluid\",\n                    src: item.src,\n                    alt: ` ${index}`,\n                    style: {\n                      maxHeight: '7.8rem'\n                    },\n                    draggable: \"false\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"position-absolute\",\n                    type: \"checkbox\",\n                    checked: selectedImages.includes(item.id),\n                    onChange: () => handleImageSelect(item.id),\n                    style: {\n                      zIndex: '10',\n                      top: '8px',\n                      right: '2px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 41\n                }, this)\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        keyboard: false,\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Delete Selected Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: selectedImages.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Are You Sure You Want To Delete \\xA0\", selectedImages.length, ' ', selectedImages.length === 1 ? 'selected image' : 'selected images', ' ', \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No Image Selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [selectedImages.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"custom-button\",\n            onClick: () => handleImageRemove(selectedImages),\n            appearance: \"primary\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            appearance: \"subtle\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Landingpage, \"PtZemhJDDn2qGj+iaD7l6denrP0=\", false, function () {\n  return [useSelector];\n});\n_c = Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useState","Col","Container","Row","GridContextProvider","GridDropZone","GridItem","swap","useSelector","toast","Button","Modal","image1","image2","image4","image5","Imageupload","jsxDEV","_jsxDEV","Fragment","_Fragment","Landingpage","_s","small","state","device","imageSources","id","src","open","setOpen","handleOpen","handleClose","imageList","setImageList","selectedImages","setSelectedImages","scrollDisabled","setScrollDisabled","disableScroll","e","type","preventDefault","window","addEventListener","passive","removeEventListener","handleImageSelect","imageId","includes","filter","baseHeight","calculatedHeight","Math","floor","length","handleImageUpload","newImages","Array","from","forEach","image","index","reader","FileReader","onload","uploadedImage","random","result","prevImageList","readAsDataURL","handleImageRemove","selectedImageIds","children","fileName","_jsxFileName","lineNumber","columnNumber","updatedImageList","success","onChange","sourceId","sourceIndex","targetIndex","nextState","setTimeout","console","log","className","onImageUpload","onImageRemove","appearance","onClick","md","style","minHeight","alt","boxesPerRow","rowHeight","height","map","item","cursor","maxHeight","draggable","checked","zIndex","top","right","keyboard","onClose","Header","Title","Body","Footer","_c","$RefreshReg$"],"sources":["C:/Users/A/Desktop/gallery/src/components/Landingpage.jsx"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { GridContextProvider, GridDropZone, GridItem, swap } from 'react-grid-dnd';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { Button, Modal } from 'rsuite';\r\nimport image1 from '../assets/images/T1It0qMA.png';\r\nimport image2 from '../assets/images/U6OVh27Q.png';\r\nimport image4 from '../assets/images/iegS0M-g.png';\r\nimport image5 from '../assets/images/z90_d-Pg.png';\r\nimport Imageupload from './Imageupload';\r\n\r\nexport default function Landingpage() {\r\n    const { small } = useSelector((state) => state.device);\r\n    const imageSources = [\r\n        {\r\n            id: 1,\r\n            src: image1,\r\n        },\r\n        {\r\n            id: 2,\r\n            src: image2,\r\n        },\r\n        {\r\n            id: 3,\r\n            src: image4,\r\n        },\r\n        {\r\n            id: 4,\r\n            src: image5,\r\n        },\r\n        {\r\n            id: 5,\r\n            src: image4,\r\n        },\r\n        {\r\n            id: 6,\r\n            src: image5,\r\n        },\r\n    ];\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const [imageList, setImageList] = useState(imageSources);\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n    const [scrollDisabled, setScrollDisabled] = useState(false);\r\n\r\n    // Disable window scrolling when dragging starts\r\n    useEffect(() => {\r\n        const disableScroll = (e) => {\r\n            if (e.type === 'touchmove') {\r\n                e.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (scrollDisabled) {\r\n            window.addEventListener('touchmove', disableScroll, { passive: false });\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('touchmove', disableScroll);\r\n        };\r\n    }, [scrollDisabled]);\r\n    const handleImageSelect = (imageId) => {\r\n        if (selectedImages.includes(imageId)) {\r\n            setSelectedImages(selectedImages.filter((id) => id !== imageId));\r\n        } else {\r\n            setSelectedImages([...selectedImages, imageId]);\r\n        }\r\n    };\r\n    const baseHeight = 150;\r\n    const calculatedHeight = `${\r\n        small\r\n            ? baseHeight + Math.floor((imageList.length - 1) / 4) * 50\r\n            : baseHeight + Math.floor((imageList.length - 1) / 4) * 160\r\n    }px`;\r\n    const handleImageUpload = (newImages) => {\r\n        Array.from(newImages).forEach((image, index) => {\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                const uploadedImage = {\r\n                    id: imageList.length + Math.random() + index + 1, // Assign a unique ID\r\n                    src: reader.result,\r\n                };\r\n                setImageList((prevImageList) => [...prevImageList, uploadedImage]);\r\n            };\r\n            reader.readAsDataURL(image);\r\n        });\r\n    };\r\n    const handleImageRemove = (selectedImageIds) => {\r\n        if (selectedImageIds.length === 0) {\r\n            <p>No Images Selected</p>;\r\n        } else {\r\n            const updatedImageList = imageList.filter(\r\n                (image) => !selectedImageIds.includes(image.id)\r\n            );\r\n            setImageList(updatedImageList);\r\n            toast.success('Images Deleted successfully');\r\n            handleClose();\r\n            setSelectedImages([]);\r\n        }\r\n    };\r\n\r\n    const onChange = (sourceId: string, sourceIndex: number, targetIndex: number) => {\r\n        setScrollDisabled(true);\r\n        const nextState = swap(imageList, sourceIndex, targetIndex);\r\n        setImageList(nextState);\r\n\r\n        // Enable window scrolling after a short delay\r\n        setTimeout(() => {\r\n            setScrollDisabled(false);\r\n        }, 100); // You can adjust the delay as needed\r\n    };\r\n\r\n    console.log(scrollDisabled);\r\n    return (\r\n        <>\r\n            <div className=\" navbar ps-1 ps-md-2 pe-2 pe-md-3\">\r\n                <div className={`container d-flex justify-content-end ${small ? 'px-0' : ''}`}>\r\n                    <Imageupload\r\n                        onImageUpload={handleImageUpload}\r\n                        onImageRemove={handleImageRemove}\r\n                    />\r\n                    <Button className=\"custom-button\" appearance=\"primary\" onClick={handleOpen}>\r\n                        Delete\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <Container className=\"mt-5 mb-5\">\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <div\r\n                            className=\"yellow-border d-flex justify-content-center align-items-center w-100\"\r\n                            style={{ minHeight: small ? '14rem' : '10rem' }}\r\n                        >\r\n                            <img\r\n                                className=\"img-fluid rounded rounded-1 \"\r\n                                src={imageList[0].src}\r\n                                alt=\"featured\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <GridContextProvider onChange={onChange}>\r\n                            <GridDropZone\r\n                                id=\"items\"\r\n                                boxesPerRow={4}\r\n                                rowHeight={small ? 90 : 140}\r\n                                style={{ height: calculatedHeight }}\r\n                            >\r\n                                {imageList.map((item, index) => (\r\n                                    <GridItem key={item.id}>\r\n                                        <div\r\n                                            className={`position-relative d-flex justify-content-center align-items-center rounded rounded-1 m-1 ${\r\n                                                index === 0 ? 'yellow-border' : 'border'\r\n                                            }`}\r\n                                            style={{\r\n                                                height: small ? '5rem' : '8rem',\r\n                                                cursor: '-webkit-grab',\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                className=\"img-fluid\"\r\n                                                src={item.src}\r\n                                                alt={` ${index}`}\r\n                                                style={{ maxHeight: '7.8rem' }}\r\n                                                draggable=\"false\"\r\n                                            />\r\n                                            <input\r\n                                                className=\"position-absolute\"\r\n                                                type=\"checkbox\"\r\n                                                checked={selectedImages.includes(item.id)}\r\n                                                onChange={() => handleImageSelect(item.id)}\r\n                                                style={{\r\n                                                    zIndex: '10',\r\n                                                    top: '8px',\r\n                                                    right: '2px',\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </GridItem>\r\n                                ))}\r\n                            </GridDropZone>\r\n                        </GridContextProvider>\r\n                    </Col>\r\n                </Row>\r\n                <Modal keyboard={false} open={open} onClose={handleClose}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Delete Selected Images</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        {selectedImages.length > 0 ? (\r\n                            <p>\r\n                                Are You Sure You Want To Delete &nbsp;\r\n                                {selectedImages.length}{' '}\r\n                                {selectedImages.length === 1 ? 'selected image' : 'selected images'}{' '}\r\n                                ?\r\n                            </p>\r\n                        ) : (\r\n                            <p>No Image Selected</p>\r\n                        )}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        {selectedImages.length > 0 && (\r\n                            <Button\r\n                                className=\"custom-button\"\r\n                                onClick={() => handleImageRemove(selectedImages)}\r\n                                appearance=\"primary\"\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        )}\r\n                        <Button onClick={handleClose} appearance=\"subtle\">\r\n                            Cancel\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}