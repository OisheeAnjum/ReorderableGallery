{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A\\\\Desktop\\\\gallery\\\\src\\\\components\\\\Landingpage.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-shadow */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { GridContextProvider, swap } from 'react-grid-dnd';\nimport { Button } from 'rsuite';\nimport image1 from '../assets/images/T1It0qMA.png';\nimport image2 from '../assets/images/U6OVh27Q.png';\nimport image4 from '../assets/images/iegS0M-g.png';\nimport image5 from '../assets/images/z90_d-Pg.png';\nimport Imageupload from './Imageupload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Landingpage() {\n  _s();\n  const [selectedImages, setSelectedImages] = useState([]);\n  const handleImageSelect = imageId => {\n    if (selectedImages.includes(imageId)) {\n      setSelectedImages(selectedImages.filter(id => id !== imageId));\n    } else {\n      setSelectedImages([...selectedImages, imageId]);\n    }\n    console.log(imageId);\n  };\n  const imageSources = [{\n    id: 1,\n    src: image1\n  }, {\n    id: 2,\n    src: image2\n  }, {\n    id: 3,\n    src: image4\n  }, {\n    id: 4,\n    src: image5\n  }\n  // Add more images as needed\n  ];\n\n  const [imageList, setImageList] = useState(imageSources);\n  const onChange = (sourceId, sourceIndex, targetIndex, targetId) => {\n    const nextState = swap(items, sourceIndex, targetIndex);\n    setItems(nextState);\n  };\n  const handleImageUpload = newImages => {\n    Array.from(newImages).forEach((image, index) => {\n      // You can use FileReader to read each uploaded image and generate a URL for it.\n      const reader = new FileReader();\n      reader.onload = () => {\n        const uploadedImage = {\n          id: imageList.length + Math.random() + index + 1,\n          // Assign a unique ID\n          src: reader.result\n        };\n        setImageList(prevImageList => [...prevImageList, uploadedImage]);\n      };\n      reader.readAsDataURL(image);\n    });\n  };\n  const handleDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    const reorderedImages = [...imageList];\n    const [movedImage] = reorderedImages.splice(result.source.index, 1);\n    reorderedImages.splice(result.destination.index, 0, movedImage);\n    setImageList(reorderedImages);\n  };\n  const handleImageRemove = selectedImageIds => {\n    const updatedImageList = imageList.filter(image => !selectedImageIds.includes(image.id));\n    setImageList(updatedImageList);\n  };\n  // const grid = 8;\n  const getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    overflow: 'scroll'\n  });\n\n  // const getItemStyle = () => ({\n  //     height: '22rem',\n  //     width: '22rem',\n  // });\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(Imageupload, {\n      onImageUpload: handleImageUpload,\n      onImageRemove: handleImageRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleImageRemove(selectedImages),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid rounded rounded-1 yellow-border\",\n          src: imageList[0].src,\n          alt: \"featured\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: /*#__PURE__*/_jsxDEV(GridContextProvider, {\n          onChange: onChange,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"image-gallery\",\n            direction: \"horizontal\",\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: getListStyle(snapshot.isDraggingOver),\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: imageList.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: `draggable-${item.id}`,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(Col, {\n                    md: 3,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"position-relative \",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        ref: provided.innerRef,\n                        className: `img-fluid  rounded rounded-1 m-1 ${index === 0 ? 'yellow-border' : 'border'}`,\n                        src: item.src,\n                        alt: ` ${index}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"position-absolute\",\n                        type: \"checkbox\",\n                        checked: selectedImages.includes(item.id),\n                        onChange: () => handleImageSelect(item.id),\n                        style: {\n                          zIndex: '10',\n                          top: '8px',\n                          right: '2px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 53\n                  }, this)\n                }, `draggable-${item.id}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"V58cDOg+9X9dofuUonAdis0iALk=\");\n_c = Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useState","Draggable","Droppable","Col","Container","Row","GridContextProvider","swap","Button","image1","image2","image4","image5","Imageupload","jsxDEV","_jsxDEV","Landingpage","_s","selectedImages","setSelectedImages","handleImageSelect","imageId","includes","filter","id","console","log","imageSources","src","imageList","setImageList","onChange","sourceId","sourceIndex","targetIndex","targetId","nextState","items","setItems","handleImageUpload","newImages","Array","from","forEach","image","index","reader","FileReader","onload","uploadedImage","length","Math","random","result","prevImageList","readAsDataURL","handleDragEnd","destination","reorderedImages","movedImage","splice","source","handleImageRemove","selectedImageIds","updatedImageList","getListStyle","isDraggingOver","background","overflow","className","children","onImageUpload","onImageRemove","fileName","_jsxFileName","lineNumber","columnNumber","onClick","md","alt","droppableId","direction","provided","snapshot","ref","innerRef","droppableProps","style","map","item","draggableId","draggableProps","dragHandleProps","type","checked","zIndex","top","right","_c","$RefreshReg$"],"sources":["C:/Users/A/Desktop/gallery/src/components/Landingpage.jsx"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useState } from 'react';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nimport { GridContextProvider, swap } from 'react-grid-dnd';\r\nimport { Button } from 'rsuite';\r\nimport image1 from '../assets/images/T1It0qMA.png';\r\nimport image2 from '../assets/images/U6OVh27Q.png';\r\nimport image4 from '../assets/images/iegS0M-g.png';\r\nimport image5 from '../assets/images/z90_d-Pg.png';\r\nimport Imageupload from './Imageupload';\r\n\r\nexport default function Landingpage() {\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n    const handleImageSelect = (imageId) => {\r\n        if (selectedImages.includes(imageId)) {\r\n            setSelectedImages(selectedImages.filter((id) => id !== imageId));\r\n        } else {\r\n            setSelectedImages([...selectedImages, imageId]);\r\n        }\r\n        console.log(imageId);\r\n    };\r\n\r\n    const imageSources = [\r\n        {\r\n            id: 1,\r\n            src: image1,\r\n        },\r\n        {\r\n            id: 2,\r\n            src: image2,\r\n        },\r\n        {\r\n            id: 3,\r\n            src: image4,\r\n        },\r\n        {\r\n            id: 4,\r\n            src: image5,\r\n        },\r\n        // Add more images as needed\r\n    ];\r\n\r\n    const [imageList, setImageList] = useState(imageSources);\r\n    const onChange = (sourceId, sourceIndex, targetIndex, targetId) => {\r\n        const nextState = swap(items, sourceIndex, targetIndex);\r\n        setItems(nextState);\r\n    };\r\n    const handleImageUpload = (newImages) => {\r\n        Array.from(newImages).forEach((image, index) => {\r\n            // You can use FileReader to read each uploaded image and generate a URL for it.\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                const uploadedImage = {\r\n                    id: imageList.length + Math.random() + index + 1, // Assign a unique ID\r\n                    src: reader.result,\r\n                };\r\n                setImageList((prevImageList) => [...prevImageList, uploadedImage]);\r\n            };\r\n            reader.readAsDataURL(image);\r\n        });\r\n    };\r\n\r\n    const handleDragEnd = (result) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const reorderedImages = [...imageList];\r\n        const [movedImage] = reorderedImages.splice(result.source.index, 1);\r\n        reorderedImages.splice(result.destination.index, 0, movedImage);\r\n\r\n        setImageList(reorderedImages);\r\n    };\r\n    const handleImageRemove = (selectedImageIds) => {\r\n        const updatedImageList = imageList.filter((image) => !selectedImageIds.includes(image.id));\r\n        setImageList(updatedImageList);\r\n    };\r\n    // const grid = 8;\r\n    const getListStyle = (isDraggingOver) => ({\r\n        background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n        overflow: 'scroll',\r\n    });\r\n\r\n    // const getItemStyle = () => ({\r\n    //     height: '22rem',\r\n    //     width: '22rem',\r\n    // });\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Imageupload onImageUpload={handleImageUpload} onImageRemove={handleImageRemove} />\r\n            <Button onClick={() => handleImageRemove(selectedImages)}>Delete</Button>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <img\r\n                        className=\"img-fluid rounded rounded-1 yellow-border\"\r\n                        src={imageList[0].src}\r\n                        alt=\"featured\"\r\n                    />\r\n                </Col>\r\n                <Col md={9}>\r\n                    <GridContextProvider onChange={onChange}>\r\n                        <Droppable droppableId=\"image-gallery\" direction=\"horizontal\">\r\n                            {(provided, snapshot) => (\r\n                                <div\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                    style={getListStyle(snapshot.isDraggingOver)}\r\n                                >\r\n                                    <Row>\r\n                                        {imageList.map((item, index) => (\r\n                                            <Draggable\r\n                                                draggableId={`draggable-${item.id}`}\r\n                                                key={`draggable-${item.id}`}\r\n                                                index={index}\r\n                                            >\r\n                                                {(provided) => (\r\n                                                    <Col\r\n                                                        md={3}\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}\r\n                                                    >\r\n                                                        <div className=\"position-relative \">\r\n                                                            <img\r\n                                                                ref={provided.innerRef}\r\n                                                                className={`img-fluid  rounded rounded-1 m-1 ${\r\n                                                                    index === 0\r\n                                                                        ? 'yellow-border'\r\n                                                                        : 'border'\r\n                                                                }`}\r\n                                                                src={item.src}\r\n                                                                alt={` ${index}`}\r\n                                                            />\r\n                                                            <input\r\n                                                                className=\"position-absolute\"\r\n                                                                type=\"checkbox\"\r\n                                                                checked={selectedImages.includes(\r\n                                                                    item.id\r\n                                                                )}\r\n                                                                onChange={() =>\r\n                                                                    handleImageSelect(item.id)\r\n                                                                }\r\n                                                                style={{\r\n                                                                    zIndex: '10',\r\n                                                                    top: '8px',\r\n                                                                    right: '2px',\r\n                                                                }}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        ))}\r\n                                    </Row>\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    </GridContextProvider>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}