{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"affixHeader\", \"children\", \"classPrefix\", \"className\", \"data\", \"defaultSortType\", \"width\", \"expandedRowKeys\", \"defaultExpandAllRows\", \"defaultExpandedRowKeys\", \"style\", \"id\", \"isTree\", \"hover\", \"bordered\", \"cellBordered\", \"wordWrap\", \"loading\", \"locale\", \"showHeader\", \"sortColumn\", \"rowHeight\", \"sortType\", \"headerHeight\", \"minHeight\", \"height\", \"autoHeight\", \"fillHeight\", \"rtl\", \"translate3d\", \"rowKey\", \"virtualized\", \"rowClassName\", \"rowExpandedHeight\", \"disabledScroll\", \"affixHorizontalScrollbar\", \"loadAnimation\", \"shouldUpdateScroll\", \"renderRow\", \"renderRowExpanded\", \"renderLoading\", \"renderEmpty\", \"onSortColumn\", \"onScroll\", \"renderTreeToggle\", \"onRowClick\", \"onRowContextMenu\", \"onExpandChange\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\"],\n  _excluded2 = [\"depth\", \"rowIndex\"],\n  _excluded3 = [\"cellHeight\"];\nimport React, { useState, useRef, useCallback, useImperativeHandle, useReducer } from 'react';\nimport { getTranslateDOMPositionXY } from 'dom-lib/translateDOMPositionXY';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash/isFunction';\nimport flatten from 'lodash/flatten';\nimport debounce from 'lodash/debounce';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport MouseArea from './MouseArea';\nimport Loader from './Loader';\nimport EmptyMessage from './EmptyMessage';\nimport TableContext from './TableContext';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT, SORT_TYPE, EXPANDED_KEY, TREE_DEPTH, ROW_HEADER_HEIGHT, ROW_HEIGHT } from './constants';\nimport { mergeCells, flattenData, isRTL, findRowKeys, findAllParents, shouldShowRowByExpanded, resetLeftForCells, useClassNames, useControlled, useUpdateEffect, useCellDescriptor, useTableDimension, useTableRows, useAffix, useScrollListener, usePosition, isSupportTouchEvent } from './utils';\n/**\n * Filter those expanded nodes.\n * @param data\n * @param expandedRowKeys\n * @param rowKey\n * @returns\n */\nvar filterTreeData = function filterTreeData(data, expandedRowKeys, rowKey) {\n  return flattenData(data).filter(function (rowData) {\n    if (rowKey) {\n      var parents = findAllParents(rowData, rowKey);\n      var _expanded = shouldShowRowByExpanded(expandedRowKeys, parents);\n\n      // FIXME This function is supposed to be pure.\n      //       Don't mutate rowData in-place!\n      rowData[EXPANDED_KEY] = _expanded;\n      rowData[TREE_DEPTH] = parents.length;\n      return _expanded;\n    }\n  });\n};\nvar DATA_PLACEHOLDER = [];\nvar Table = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var affixHeader = props.affixHeader,\n    children = props.children,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'rs-table' : _props$classPrefix,\n    className = props.className,\n    _props$data = props.data,\n    dataProp = _props$data === void 0 ? DATA_PLACEHOLDER : _props$data,\n    _props$defaultSortTyp = props.defaultSortType,\n    defaultSortType = _props$defaultSortTyp === void 0 ? SORT_TYPE.DESC : _props$defaultSortTyp,\n    widthProp = props.width,\n    expandedRowKeysProp = props.expandedRowKeys,\n    defaultExpandAllRows = props.defaultExpandAllRows,\n    defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n    style = props.style,\n    id = props.id,\n    isTree = props.isTree,\n    _props$hover = props.hover,\n    hover = _props$hover === void 0 ? true : _props$hover,\n    bordered = props.bordered,\n    cellBordered = props.cellBordered,\n    wordWrap = props.wordWrap,\n    loading = props.loading,\n    _props$locale = props.locale,\n    locale = _props$locale === void 0 ? {\n      emptyMessage: 'No data found',\n      loading: 'Loading...'\n    } : _props$locale,\n    _props$showHeader = props.showHeader,\n    showHeader = _props$showHeader === void 0 ? true : _props$showHeader,\n    sortColumn = props.sortColumn,\n    _props$rowHeight = props.rowHeight,\n    rowHeight = _props$rowHeight === void 0 ? ROW_HEIGHT : _props$rowHeight,\n    sortTypeProp = props.sortType,\n    _props$headerHeight = props.headerHeight,\n    headerHeightProp = _props$headerHeight === void 0 ? ROW_HEADER_HEIGHT : _props$headerHeight,\n    _props$minHeight = props.minHeight,\n    minHeight = _props$minHeight === void 0 ? 0 : _props$minHeight,\n    _props$height = props.height,\n    height = _props$height === void 0 ? 200 : _props$height,\n    autoHeight = props.autoHeight,\n    fillHeight = props.fillHeight,\n    rtlProp = props.rtl,\n    translate3d = props.translate3d,\n    rowKey = props.rowKey,\n    virtualized = props.virtualized,\n    rowClassName = props.rowClassName,\n    _props$rowExpandedHei = props.rowExpandedHeight,\n    rowExpandedHeight = _props$rowExpandedHei === void 0 ? 100 : _props$rowExpandedHei,\n    disabledScroll = props.disabledScroll,\n    affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n    loadAnimation = props.loadAnimation,\n    _props$shouldUpdateSc = props.shouldUpdateScroll,\n    shouldUpdateScroll = _props$shouldUpdateSc === void 0 ? true : _props$shouldUpdateSc,\n    renderRowProp = props.renderRow,\n    renderRowExpandedProp = props.renderRowExpanded,\n    renderLoading = props.renderLoading,\n    renderEmpty = props.renderEmpty,\n    onSortColumn = props.onSortColumn,\n    onScroll = props.onScroll,\n    renderTreeToggle = props.renderTreeToggle,\n    onRowClick = props.onRowClick,\n    onRowContextMenu = props.onRowContextMenu,\n    onExpandChange = props.onExpandChange,\n    onTouchStart = props.onTouchStart,\n    onTouchMove = props.onTouchMove,\n    onTouchEnd = props.onTouchEnd,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix, typeof classPrefix !== 'undefined'),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    mergeCls = _useClassNames.merge,\n    prefix = _useClassNames.prefix;\n\n  // Use `forceUpdate` to force the component to re-render after manipulating the DOM.\n  var _useReducer = useReducer(function (x) {\n      return x + 1;\n    }, 0),\n    forceUpdate = _useReducer[1];\n  var _useControlled = useControlled(expandedRowKeysProp, defaultExpandAllRows ? findRowKeys(dataProp, rowKey, isFunction(renderRowExpandedProp)) : defaultExpandedRowKeys || []),\n    expandedRowKeys = _useControlled[0],\n    setExpandedRowKeys = _useControlled[1];\n  var _useState = useState(function () {\n      return isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp;\n    }),\n    data = _useState[0],\n    setData = _useState[1];\n  if (isTree) {\n    if (!rowKey) {\n      throw new Error('The `rowKey` is required when set isTree');\n    } else if (data.length > 0) {\n      if (!data[0].hasOwnProperty(rowKey)) {\n        throw new Error('The `rowKey` is not found in data');\n      }\n    }\n  }\n  var _useTableRows = useTableRows({\n      data: dataProp,\n      expandedRowKeys: expandedRowKeys,\n      wordWrap: wordWrap,\n      prefix: prefix\n    }),\n    tableRowsMaxHeight = _useTableRows.tableRowsMaxHeight,\n    bindTableRowsRef = _useTableRows.bindTableRowsRef;\n  var headerHeight = showHeader ? headerHeightProp : 0;\n  var rtl = rtlProp || isRTL();\n  var getRowHeight = function getRowHeight() {\n    return typeof rowHeight === 'function' ? rowHeight() : rowHeight;\n  };\n  var translateDOMPositionXY = useRef(getTranslateDOMPositionXY({\n    forceUseTransform: true,\n    enable3DTransform: translate3d\n  }));\n\n  // Check for the existence of fixed columns in all column properties.\n  var shouldFixedColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props;\n    return child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.fixed;\n  });\n\n  // Check all column properties for the existence of rowSpan.\n  var shouldRowSpanColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props2;\n    return child === null || child === void 0 ? void 0 : (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.rowSpan;\n  });\n  var visibleRows = useRef([]);\n  var mouseAreaRef = useRef(null);\n  var tableRef = useRef(null);\n  var tableHeaderRef = useRef(null);\n  var affixHeaderWrapperRef = useRef(null);\n  var headerWrapperRef = useRef(null);\n  var tableBodyRef = useRef(null);\n  var wheelWrapperRef = useRef(null);\n  var scrollbarXRef = useRef(null);\n  var scrollbarYRef = useRef(null);\n  var handleTableResizeChange = function handleTableResizeChange(_prevSize, event) {\n    forceUpdate();\n\n    /**\n     * Reset the position of the scroll bar after the table size changes.\n     */\n    if (typeof shouldUpdateScroll === 'function') {\n      onScrollTo(shouldUpdateScroll(event));\n    } else if (shouldUpdateScroll) {\n      var vertical = event === 'bodyHeightChanged';\n      vertical ? onScrollTop(0) : onScrollLeft(0);\n    }\n    if (event === 'bodyWidthChanged') {\n      deferUpdatePosition();\n    }\n  };\n  var _useTableDimension = useTableDimension({\n      // The data should be flattened,\n      // otherwise the array length required to calculate the scroll height in the TreeTable is not real.\n      data: data,\n      width: widthProp,\n      rowHeight: rowHeight,\n      tableRef: tableRef,\n      headerWrapperRef: headerWrapperRef,\n      prefix: prefix,\n      affixHeader: affixHeader,\n      affixHorizontalScrollbar: affixHorizontalScrollbar,\n      headerHeight: headerHeight,\n      height: height,\n      minHeight: minHeight,\n      autoHeight: autoHeight,\n      fillHeight: fillHeight,\n      children: children,\n      expandedRowKeys: expandedRowKeys,\n      showHeader: showHeader,\n      bordered: bordered,\n      onTableScroll: debounce(function (coords) {\n        return onScrollTo(coords);\n      }, 100),\n      onTableResizeChange: handleTableResizeChange\n    }),\n    contentHeight = _useTableDimension.contentHeight,\n    contentWidth = _useTableDimension.contentWidth,\n    minScrollY = _useTableDimension.minScrollY,\n    minScrollX = _useTableDimension.minScrollX,\n    scrollY = _useTableDimension.scrollY,\n    scrollX = _useTableDimension.scrollX,\n    tableWidth = _useTableDimension.tableWidth,\n    tableOffset = _useTableDimension.tableOffset,\n    headerOffset = _useTableDimension.headerOffset,\n    setScrollY = _useTableDimension.setScrollY,\n    setScrollX = _useTableDimension.setScrollX,\n    getTableHeight = _useTableDimension.getTableHeight;\n  useAffix({\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    affixHeader: affixHeader,\n    tableOffset: tableOffset,\n    headerOffset: headerOffset,\n    headerHeight: headerHeight,\n    scrollbarXRef: scrollbarXRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef\n  });\n  var _usePosition = usePosition({\n      data: dataProp,\n      height: height,\n      tableWidth: tableWidth,\n      tableRef: tableRef,\n      prefix: prefix,\n      translateDOMPositionXY: translateDOMPositionXY,\n      wheelWrapperRef: wheelWrapperRef,\n      headerWrapperRef: headerWrapperRef,\n      affixHeaderWrapperRef: affixHeaderWrapperRef,\n      tableHeaderRef: tableHeaderRef,\n      scrollX: scrollX,\n      scrollY: scrollY,\n      contentWidth: contentWidth,\n      shouldFixedColumn: shouldFixedColumn\n    }),\n    forceUpdatePosition = _usePosition.forceUpdatePosition,\n    deferUpdatePosition = _usePosition.deferUpdatePosition;\n  var _useScrollListener = useScrollListener({\n      rtl: rtl,\n      data: dataProp,\n      height: height,\n      virtualized: virtualized,\n      getTableHeight: getTableHeight,\n      contentHeight: contentHeight,\n      headerHeight: headerHeight,\n      autoHeight: autoHeight,\n      tableBodyRef: tableBodyRef,\n      scrollbarXRef: scrollbarXRef,\n      scrollbarYRef: scrollbarYRef,\n      disabledScroll: disabledScroll,\n      loading: loading,\n      tableRef: tableRef,\n      contentWidth: contentWidth,\n      tableWidth: tableWidth,\n      scrollY: scrollY,\n      minScrollY: minScrollY,\n      minScrollX: minScrollX,\n      scrollX: scrollX,\n      setScrollX: setScrollX,\n      setScrollY: setScrollY,\n      forceUpdatePosition: forceUpdatePosition,\n      deferUpdatePosition: deferUpdatePosition,\n      onScroll: onScroll,\n      onTouchStart: onTouchStart,\n      onTouchMove: onTouchMove,\n      onTouchEnd: onTouchEnd\n    }),\n    isScrolling = _useScrollListener.isScrolling,\n    onScrollHorizontal = _useScrollListener.onScrollHorizontal,\n    onScrollVertical = _useScrollListener.onScrollVertical,\n    onScrollBody = _useScrollListener.onScrollBody,\n    onScrollTop = _useScrollListener.onScrollTop,\n    onScrollLeft = _useScrollListener.onScrollLeft,\n    onScrollTo = _useScrollListener.onScrollTo,\n    onScrollByKeydown = _useScrollListener.onScrollByKeydown;\n  var _useCellDescriptor = useCellDescriptor({\n      children: children,\n      rtl: rtl,\n      mouseAreaRef: mouseAreaRef,\n      tableRef: tableRef,\n      minScrollX: minScrollX,\n      scrollX: scrollX,\n      tableWidth: tableWidth,\n      headerHeight: headerHeight,\n      showHeader: showHeader,\n      sortType: sortTypeProp,\n      defaultSortType: defaultSortType,\n      sortColumn: sortColumn,\n      prefix: prefix,\n      onSortColumn: onSortColumn,\n      // Force table update after column width change, so scrollbar re-renders.\n      onHeaderCellResize: forceUpdate,\n      rowHeight: rowHeight\n    }),\n    headerCells = _useCellDescriptor.headerCells,\n    bodyCells = _useCellDescriptor.bodyCells,\n    allColumnsWidth = _useCellDescriptor.allColumnsWidth,\n    hasCustomTreeCol = _useCellDescriptor.hasCustomTreeCol;\n  var colCounts = useRef((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0);\n  useUpdateEffect(function () {\n    setData(isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp);\n  }, [dataProp, expandedRowKeys, rowKey, isTree]);\n  useUpdateEffect(function () {\n    if ((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) !== colCounts.current) {\n      onScrollLeft(0);\n      colCounts.current = (headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0;\n    }\n  }, [children]);\n  useImperativeHandle(ref, function () {\n    return {\n      get root() {\n        return tableRef.current;\n      },\n      get body() {\n        return wheelWrapperRef.current;\n      },\n      scrollTop: onScrollTop,\n      scrollLeft: onScrollLeft\n    };\n  });\n  var rowWidth = allColumnsWidth > tableWidth.current ? allColumnsWidth : tableWidth.current;\n\n  // Whether to show vertical scroll bar\n  var hasVerticalScrollbar = !autoHeight && contentHeight.current > getTableHeight() - headerHeight;\n\n  // Whether to show the horizontal scroll bar\n  var hasHorizontalScrollbar = contentWidth.current > tableWidth.current;\n  var classes = mergeCls(className, withClassPrefix({\n    bordered: bordered,\n    hover: hover && !shouldRowSpanColumn,\n    loading: loading,\n    treetable: isTree,\n    'word-wrap': wordWrap,\n    'cell-bordered': cellBordered\n  }));\n  var styles = _extends({\n    width: widthProp || 'auto',\n    height: getTableHeight()\n  }, style);\n  var renderRowExpanded = useCallback(function (rowData) {\n    var height = 0;\n    if (typeof rowExpandedHeight === 'function') {\n      height = rowExpandedHeight(rowData);\n    } else {\n      height = rowExpandedHeight;\n    }\n    var styles = {\n      height: height\n    };\n    if (typeof renderRowExpandedProp === 'function') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('row-expanded'),\n        style: styles\n      }, renderRowExpandedProp(rowData));\n    }\n    return null;\n  }, [prefix, renderRowExpandedProp, rowExpandedHeight]);\n  var renderRow = function renderRow(props, cells, shouldRenderExpandedRow, rowData) {\n    var depth = props.depth,\n      rowIndex = props.rowIndex,\n      restRowProps = _objectWithoutPropertiesLoose(props, _excluded2);\n    if (typeof rowClassName === 'function') {\n      restRowProps.className = rowClassName(rowData, rowIndex);\n    } else {\n      restRowProps.className = rowClassName;\n    }\n    var rowStyles = _extends({}, props === null || props === void 0 ? void 0 : props.style);\n    var rowRight = 0;\n    if (rtl && contentWidth.current > tableWidth.current) {\n      rowRight = tableWidth.current - contentWidth.current;\n      rowStyles.right = rowRight;\n    }\n    var rowNode = null;\n\n    // IF there are fixed columns, add a fixed group\n    if (shouldFixedColumn && contentWidth.current > tableWidth.current) {\n      var fixedLeftCells = [];\n      var fixedRightCells = [];\n      var scrollCells = [];\n      var fixedLeftCellGroupWidth = 0;\n      var fixedRightCellGroupWidth = 0;\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        var _cell$props = cell.props,\n          fixed = _cell$props.fixed,\n          width = _cell$props.width;\n        var isFixedStart = fixed === 'left' || fixed === true;\n        var isFixedEnd = fixed === 'right';\n        if (rtl) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n        if (isFixedStart) {\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          scrollCells.push(cell);\n        }\n      }\n      if (hasVerticalScrollbar && fixedRightCellGroupWidth) {\n        fixedRightCellGroupWidth += SCROLLBAR_WIDTH;\n      }\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, fixedLeftCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"left\",\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedLeftCellGroupWidth,\n        style: rtl ? {\n          right: tableWidth.current - fixedLeftCellGroupWidth - rowRight\n        } : undefined\n      }, mergeCells(resetLeftForCells(fixedLeftCells))) : null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(scrollCells)), fixedRightCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"right\",\n        style: rtl ? {\n          right: 0 - rowRight\n        } : {\n          left: tableWidth.current - fixedRightCellGroupWidth\n        },\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedRightCellGroupWidth\n      }, mergeCells(resetLeftForCells(fixedRightCells, hasVerticalScrollbar ? SCROLLBAR_WIDTH : 0))) : null, shouldRenderExpandedRow && renderRowExpanded(rowData));\n    } else {\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(cells)), shouldRenderExpandedRow && renderRowExpanded(rowData));\n    }\n    return /*#__PURE__*/React.createElement(Row, _extends({}, restRowProps, {\n      \"data-depth\": depth,\n      style: rowStyles\n    }), renderRowProp ? renderRowProp(rowNode, rowData) : rowNode);\n  };\n  var renderTableHeader = function renderTableHeader(headerCells, rowWidth) {\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var rowProps = {\n      'aria-rowindex': 1,\n      rowRef: tableHeaderRef,\n      width: rowWidth,\n      height: getRowHeight(),\n      headerHeight: headerHeight,\n      isHeaderRow: true,\n      top: 0,\n      rowIndex: -1\n    };\n    var fixedStyle = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: headerHeight,\n      width: tableWidth.current,\n      top: top\n    };\n\n    // Affix header\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('affix-header'),\n      style: fixedStyle,\n      ref: affixHeaderWrapperRef\n    }, renderRow(rowProps, headerCells));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (affixHeader === 0 || affixHeader) && header, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"rowgroup\",\n      className: prefix('header-row-wrapper'),\n      ref: headerWrapperRef\n    }, renderRow(rowProps, headerCells)));\n  };\n  var shouldRenderExpandedRow = useCallback(function (rowData) {\n    if (isFunction(renderRowExpandedProp) && !isTree && rowKey && expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    })) {\n      return true;\n    }\n    return false;\n  }, [expandedRowKeys, isTree, renderRowExpandedProp, rowKey]);\n  var bindRowClick = useCallback(function (rowData) {\n    return function (event) {\n      onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(rowData, event);\n    };\n  }, [onRowClick]);\n  var bindRowContextMenu = useCallback(function (rowData) {\n    return function (event) {\n      onRowContextMenu === null || onRowContextMenu === void 0 ? void 0 : onRowContextMenu(rowData, event);\n    };\n  }, [onRowContextMenu]);\n  var handleTreeToggle = useCallback(function (treeRowKey, _rowIndex, rowData) {\n    var open = false;\n    var nextExpandedRowKeys = [];\n    for (var i = 0; i < expandedRowKeys.length; i++) {\n      var key = expandedRowKeys[i];\n      if (key === treeRowKey) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    }\n    if (!open) {\n      nextExpandedRowKeys.push(treeRowKey);\n    }\n    setExpandedRowKeys(nextExpandedRowKeys);\n    onExpandChange === null || onExpandChange === void 0 ? void 0 : onExpandChange(!open, rowData);\n  }, [expandedRowKeys, onExpandChange, setExpandedRowKeys]);\n\n  /**\n   * Records the status of merged rows.\n   * { cellKey: [count,index]}\n   */\n  var rowSpanState = useRef({});\n  var renderRowData = function renderRowData(bodyCells, rowData, props, shouldRenderExpandedRow) {\n    var hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    var nextRowKey = rowKey && typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n    var cellHeight = props.cellHeight,\n      restRowProps = _objectWithoutPropertiesLoose(props, _excluded3);\n    var rowProps = _extends({}, restRowProps, {\n      key: nextRowKey,\n      'aria-rowindex': props.key + 2,\n      rowRef: bindTableRowsRef(props.key, rowData),\n      onClick: bindRowClick(rowData),\n      onContextMenu: bindRowContextMenu(rowData)\n    });\n    var expanded = expandedRowKeys.some(function (key) {\n      return rowKey && key === rowData[rowKey];\n    });\n    var cells = [];\n    for (var i = 0; i < bodyCells.length; i++) {\n      var _cell$props2, _cell$props2$rowSpan, _cell$props3, _rowSpanState$current, _cell$props4, _rowSpanState$current2;\n      var cell = bodyCells[i];\n      var rowSpan = (_cell$props2 = cell.props) === null || _cell$props2 === void 0 ? void 0 : (_cell$props2$rowSpan = (_cell$props3 = _cell$props2).rowSpan) === null || _cell$props2$rowSpan === void 0 ? void 0 : _cell$props2$rowSpan.call(_cell$props3, rowData);\n      var dataCellHeight = rowSpan ? rowSpan * (cellHeight || ROW_HEIGHT) : cellHeight;\n      var _cellKey = cell.props.dataKey || i;\n\n      // Record the cell state of the merged row\n      if (((_rowSpanState$current = rowSpanState.current[_cellKey]) === null || _rowSpanState$current === void 0 ? void 0 : _rowSpanState$current[1]) > 0) {\n        rowSpanState.current[_cellKey][1] -= 1;\n\n        // Restart counting when merged to the last cell.\n        if (rowSpanState.current[_cellKey][1] === 0) {\n          rowSpanState.current[_cellKey][0] = 0;\n        }\n      }\n      if (rowSpan) {\n        // The state of the initial merged cell\n        rowSpanState.current[_cellKey] = [rowSpan, rowSpan];\n        rowProps.rowSpan = rowSpan;\n        rowProps.style = {\n          overflow: 'inherit'\n        };\n      }\n\n      // Cells marked as deleted when checking for merged cell.\n      var removedCell = (_cell$props4 = cell.props) !== null && _cell$props4 !== void 0 && _cell$props4.rowSpan && !rowSpan && ((_rowSpanState$current2 = rowSpanState.current[_cellKey]) === null || _rowSpanState$current2 === void 0 ? void 0 : _rowSpanState$current2[0]) !== 0 ? true : false;\n      cells.push( /*#__PURE__*/React.cloneElement(cell, {\n        hasChildren: hasChildren,\n        rowData: rowData,\n        rowIndex: props.rowIndex,\n        wordWrap: wordWrap,\n        height: dataCellHeight,\n        depth: props.depth,\n        renderTreeToggle: renderTreeToggle,\n        onTreeToggle: handleTreeToggle,\n        rowKey: nextRowKey,\n        expanded: expanded,\n        rowSpan: rowSpan,\n        removed: removedCell\n      }));\n    }\n    return renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  };\n  var renderScrollbar = function renderScrollbar() {\n    var height = getTableHeight();\n    if (disabledScroll) {\n      return null;\n    }\n    var scrollbars = [];\n    if (hasHorizontalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        key: \"scrollbar\",\n        tableId: id,\n        style: {\n          width: tableWidth.current\n        },\n        length: tableWidth.current,\n        onScroll: onScrollHorizontal,\n        scrollLength: contentWidth.current,\n        ref: scrollbarXRef\n      }));\n    }\n    if (hasVerticalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        vertical: true,\n        key: \"vertical-scrollbar\",\n        tableId: id,\n        length: height - headerHeight,\n        onScroll: onScrollVertical,\n        scrollLength: contentHeight.current,\n        ref: scrollbarYRef\n      }));\n    }\n    return scrollbars;\n  };\n  var renderTableBody = function renderTableBody(bodyCells, rowWidth) {\n    var _visibleRows$current;\n    var height = getTableHeight();\n    var bodyHeight = height - headerHeight;\n    var bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight\n    };\n    var contentHeight = 0;\n    var topHideHeight = 0;\n    var bottomHideHeight = 0;\n    visibleRows.current = [];\n    if (data) {\n      var _top = 0; // Row position\n      var minTop = Math.abs(scrollY.current);\n      var startHeight = 0;\n      if (typeof rowExpandedHeight === 'function') {\n        startHeight = data.length ? rowExpandedHeight(data[0]) : 100;\n      } else {\n        startHeight = rowExpandedHeight;\n      }\n      var maxTop = minTop + height + startHeight;\n      var isCustomRowHeight = typeof rowHeight === 'function';\n      var isUncertainHeight = !!renderRowExpandedProp || isCustomRowHeight || wordWrap;\n\n      // If virtualized is enabled and the row height in the Table is variable,\n      // you need to loop through the data to get the height of each row.\n      if (isUncertainHeight && virtualized || !virtualized) {\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredHeight = height * 3;\n          minTop = Math.max(minTop - coveredHeight, 0);\n          maxTop = maxTop + coveredHeight;\n        }\n        for (var index = 0; index < data.length; index++) {\n          var _rowData = data[index];\n          var maxHeight = tableRowsMaxHeight[index];\n          var expandedRow = shouldRenderExpandedRow(_rowData);\n          var nextRowHeight = 0;\n          var cellHeight = 0;\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(_rowData);\n            cellHeight = nextRowHeight;\n          } else {\n            nextRowHeight = maxHeight ? Math.max(maxHeight + CELL_PADDING_HEIGHT, rowHeight) : rowHeight;\n            cellHeight = nextRowHeight;\n            if (expandedRow) {\n              // If the row is expanded, the height of the expanded row is added.\n              if (typeof rowExpandedHeight === 'function') {\n                nextRowHeight += rowExpandedHeight(_rowData);\n              } else {\n                nextRowHeight += rowExpandedHeight;\n              }\n            }\n          }\n          contentHeight += nextRowHeight;\n          var rowProps = {\n            key: index,\n            top: _top,\n            rowIndex: index,\n            width: rowWidth,\n            depth: _rowData[TREE_DEPTH],\n            height: nextRowHeight,\n            cellHeight: cellHeight\n          };\n          _top += nextRowHeight;\n          if (virtualized && !wordWrap) {\n            if (_top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (_top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n          visibleRows.current.push(renderRowData(bodyCells, _rowData, rowProps, expandedRow));\n        }\n      } else {\n        /** virtualized */\n\n        // If the row height of the Table is fixed, it is directly calculated by the row height and the number of rows,\n        // thereby reducing the performance cost of traversing all data.\n        var _nextRowHeight = getRowHeight();\n        var startIndex = Math.max(Math.floor(minTop / _nextRowHeight), 0);\n        var endIndex = Math.min(startIndex + Math.ceil(bodyHeight / _nextRowHeight) + 5, data.length);\n\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredCount = Math.floor(height / _nextRowHeight * 3);\n          startIndex = Math.max(startIndex - coveredCount, 0);\n          endIndex = Math.min(endIndex + coveredCount, data.length);\n        }\n        contentHeight = data.length * _nextRowHeight;\n        topHideHeight = startIndex * _nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * _nextRowHeight;\n        for (var _index = startIndex; _index < endIndex; _index++) {\n          var _rowData2 = data[_index];\n          var _rowProps = {\n            key: _index,\n            rowIndex: _index,\n            depth: _rowData2[TREE_DEPTH],\n            top: _index * _nextRowHeight,\n            width: rowWidth,\n            height: _nextRowHeight,\n            cellHeight: _nextRowHeight\n          };\n          visibleRows.current.push(renderRowData(bodyCells, _rowData2, _rowProps, false));\n        }\n      }\n    }\n    var wheelStyles = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined\n    };\n    var topRowStyles = {\n      height: topHideHeight\n    };\n    var bottomRowStyles = {\n      height: bottomHideHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: tableBodyRef,\n      role: \"rowgroup\",\n      className: prefix('body-row-wrapper'),\n      style: bodyStyles,\n      onScroll: onScrollBody\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wheelStyles,\n      className: prefix('body-wheel-area'),\n      ref: wheelWrapperRef\n    }, topHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: topRowStyles,\n      className: \"virtualized\"\n    }) : null, visibleRows.current, bottomHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: bottomRowStyles,\n      className: \"virtualized\"\n    }) : null), /*#__PURE__*/React.createElement(EmptyMessage, {\n      locale: locale,\n      renderEmpty: renderEmpty,\n      addPrefix: prefix,\n      loading: !!((_visibleRows$current = visibleRows.current) !== null && _visibleRows$current !== void 0 && _visibleRows$current.length) || loading\n    }), renderScrollbar(), /*#__PURE__*/React.createElement(Loader, {\n      locale: locale,\n      loadAnimation: loadAnimation,\n      loading: loading,\n      addPrefix: prefix,\n      renderLoading: renderLoading\n    }));\n  };\n  var contextValue = React.useMemo(function () {\n    return {\n      classPrefix: classPrefix,\n      translateDOMPositionXY: translateDOMPositionXY.current,\n      rtl: rtl,\n      isTree: isTree,\n      hasCustomTreeCol: hasCustomTreeCol\n    };\n  }, [classPrefix, hasCustomTreeCol, isTree, rtl]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: isTree ? 'treegrid' : 'grid'\n    // The aria-rowcount is specified on the element with the table.\n    // Its value is an integer equal to the total number of rows available, including header rows.\n    ,\n\n    \"aria-rowcount\": data.length + 1,\n    \"aria-colcount\": colCounts.current,\n    \"aria-busy\": loading\n  }, rest, {\n    className: classes,\n    style: styles,\n    ref: tableRef,\n    tabIndex: -1,\n    onKeyDown: onScrollByKeydown\n  }), showHeader && renderTableHeader(headerCells, rowWidth), children && renderTableBody(bodyCells, rowWidth), showHeader && /*#__PURE__*/React.createElement(MouseArea, {\n    ref: mouseAreaRef,\n    addPrefix: prefix,\n    headerHeight: headerHeight,\n    height: getTableHeight()\n  })));\n});\nTable.displayName = 'Table';\nTable.propTypes = {\n  autoHeight: PropTypes.bool,\n  fillHeight: PropTypes.bool,\n  affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  bordered: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.any,\n  cellBordered: PropTypes.bool,\n  data: PropTypes.array,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  defaultSortType: PropTypes.any,\n  disabledScroll: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  hover: PropTypes.bool,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  locale: PropTypes.object,\n  loading: PropTypes.bool,\n  loadAnimation: PropTypes.bool,\n  minHeight: PropTypes.number,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  renderTreeToggle: PropTypes.func,\n  renderRowExpanded: PropTypes.func,\n  renderRow: PropTypes.func,\n  rowExpandedHeight: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n  renderEmpty: PropTypes.func,\n  renderLoading: PropTypes.func,\n  rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  rtl: PropTypes.bool,\n  style: PropTypes.object,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.any,\n  showHeader: PropTypes.bool,\n  shouldUpdateScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  translate3d: PropTypes.bool,\n  wordWrap: PropTypes.any,\n  width: PropTypes.number,\n  virtualized: PropTypes.bool,\n  isTree: PropTypes.bool,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onScroll: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  onExpandChange: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\nexport default Table;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","React","useState","useRef","useCallback","useImperativeHandle","useReducer","getTranslateDOMPositionXY","PropTypes","isFunction","flatten","debounce","Row","CellGroup","Scrollbar","MouseArea","Loader","EmptyMessage","TableContext","SCROLLBAR_WIDTH","CELL_PADDING_HEIGHT","SORT_TYPE","EXPANDED_KEY","TREE_DEPTH","ROW_HEADER_HEIGHT","ROW_HEIGHT","mergeCells","flattenData","isRTL","findRowKeys","findAllParents","shouldShowRowByExpanded","resetLeftForCells","useClassNames","useControlled","useUpdateEffect","useCellDescriptor","useTableDimension","useTableRows","useAffix","useScrollListener","usePosition","isSupportTouchEvent","filterTreeData","data","expandedRowKeys","rowKey","filter","rowData","parents","_expanded","length","DATA_PLACEHOLDER","Table","forwardRef","props","ref","affixHeader","children","_props$classPrefix","classPrefix","className","_props$data","dataProp","_props$defaultSortTyp","defaultSortType","DESC","widthProp","width","expandedRowKeysProp","defaultExpandAllRows","defaultExpandedRowKeys","style","id","isTree","_props$hover","hover","bordered","cellBordered","wordWrap","loading","_props$locale","locale","emptyMessage","_props$showHeader","showHeader","sortColumn","_props$rowHeight","rowHeight","sortTypeProp","sortType","_props$headerHeight","headerHeight","headerHeightProp","_props$minHeight","minHeight","_props$height","height","autoHeight","fillHeight","rtlProp","rtl","translate3d","virtualized","rowClassName","_props$rowExpandedHei","rowExpandedHeight","disabledScroll","affixHorizontalScrollbar","loadAnimation","_props$shouldUpdateSc","shouldUpdateScroll","renderRowProp","renderRow","renderRowExpandedProp","renderRowExpanded","renderLoading","renderEmpty","onSortColumn","onScroll","renderTreeToggle","onRowClick","onRowContextMenu","onExpandChange","onTouchStart","onTouchMove","onTouchEnd","rest","_useClassNames","withClassPrefix","mergeCls","merge","prefix","_useReducer","x","forceUpdate","_useControlled","setExpandedRowKeys","_useState","setData","Error","hasOwnProperty","_useTableRows","tableRowsMaxHeight","bindTableRowsRef","getRowHeight","translateDOMPositionXY","forceUseTransform","enable3DTransform","shouldFixedColumn","Array","from","some","child","_child$props","fixed","shouldRowSpanColumn","_child$props2","rowSpan","visibleRows","mouseAreaRef","tableRef","tableHeaderRef","affixHeaderWrapperRef","headerWrapperRef","tableBodyRef","wheelWrapperRef","scrollbarXRef","scrollbarYRef","handleTableResizeChange","_prevSize","event","onScrollTo","vertical","onScrollTop","onScrollLeft","deferUpdatePosition","_useTableDimension","onTableScroll","coords","onTableResizeChange","contentHeight","contentWidth","minScrollY","minScrollX","scrollY","scrollX","tableWidth","tableOffset","headerOffset","setScrollY","setScrollX","getTableHeight","_usePosition","forceUpdatePosition","_useScrollListener","isScrolling","onScrollHorizontal","onScrollVertical","onScrollBody","onScrollByKeydown","_useCellDescriptor","onHeaderCellResize","headerCells","bodyCells","allColumnsWidth","hasCustomTreeCol","colCounts","current","root","body","scrollTop","scrollLeft","rowWidth","hasVerticalScrollbar","hasHorizontalScrollbar","classes","treetable","styles","createElement","cells","shouldRenderExpandedRow","depth","rowIndex","restRowProps","rowStyles","rowRight","right","rowNode","fixedLeftCells","fixedRightCells","scrollCells","fixedLeftCellGroupWidth","fixedRightCellGroupWidth","i","cell","_cell$props","isFixedStart","isFixedEnd","push","Fragment","isHeaderRow","undefined","left","renderTableHeader","top","rowProps","rowRef","fixedStyle","position","overflow","header","role","key","bindRowClick","bindRowContextMenu","handleTreeToggle","treeRowKey","_rowIndex","open","nextExpandedRowKeys","rowSpanState","renderRowData","hasChildren","isArray","nextRowKey","cellHeight","onClick","onContextMenu","expanded","_cell$props2","_cell$props2$rowSpan","_cell$props3","_rowSpanState$current","_cell$props4","_rowSpanState$current2","call","dataCellHeight","_cellKey","dataKey","removedCell","cloneElement","onTreeToggle","removed","renderScrollbar","scrollbars","tableId","scrollLength","renderTableBody","_visibleRows$current","bodyHeight","bodyStyles","topHideHeight","bottomHideHeight","_top","minTop","Math","abs","startHeight","maxTop","isCustomRowHeight","isUncertainHeight","coveredHeight","max","index","_rowData","maxHeight","expandedRow","nextRowHeight","_nextRowHeight","startIndex","floor","endIndex","min","ceil","coveredCount","_index","_rowData2","_rowProps","wheelStyles","pointerEvents","topRowStyles","bottomRowStyles","addPrefix","contextValue","useMemo","Provider","value","tabIndex","onKeyDown","displayName","propTypes","bool","oneOfType","number","string","any","array","object","func"],"sources":["C:/Users/A/Desktop/gallery/node_modules/rsuite-table/es/Table.js"],"sourcesContent":["'use client';\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"affixHeader\", \"children\", \"classPrefix\", \"className\", \"data\", \"defaultSortType\", \"width\", \"expandedRowKeys\", \"defaultExpandAllRows\", \"defaultExpandedRowKeys\", \"style\", \"id\", \"isTree\", \"hover\", \"bordered\", \"cellBordered\", \"wordWrap\", \"loading\", \"locale\", \"showHeader\", \"sortColumn\", \"rowHeight\", \"sortType\", \"headerHeight\", \"minHeight\", \"height\", \"autoHeight\", \"fillHeight\", \"rtl\", \"translate3d\", \"rowKey\", \"virtualized\", \"rowClassName\", \"rowExpandedHeight\", \"disabledScroll\", \"affixHorizontalScrollbar\", \"loadAnimation\", \"shouldUpdateScroll\", \"renderRow\", \"renderRowExpanded\", \"renderLoading\", \"renderEmpty\", \"onSortColumn\", \"onScroll\", \"renderTreeToggle\", \"onRowClick\", \"onRowContextMenu\", \"onExpandChange\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\"],\n  _excluded2 = [\"depth\", \"rowIndex\"],\n  _excluded3 = [\"cellHeight\"];\nimport React, { useState, useRef, useCallback, useImperativeHandle, useReducer } from 'react';\nimport { getTranslateDOMPositionXY } from 'dom-lib/translateDOMPositionXY';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash/isFunction';\nimport flatten from 'lodash/flatten';\nimport debounce from 'lodash/debounce';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport MouseArea from './MouseArea';\nimport Loader from './Loader';\nimport EmptyMessage from './EmptyMessage';\nimport TableContext from './TableContext';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT, SORT_TYPE, EXPANDED_KEY, TREE_DEPTH, ROW_HEADER_HEIGHT, ROW_HEIGHT } from './constants';\nimport { mergeCells, flattenData, isRTL, findRowKeys, findAllParents, shouldShowRowByExpanded, resetLeftForCells, useClassNames, useControlled, useUpdateEffect, useCellDescriptor, useTableDimension, useTableRows, useAffix, useScrollListener, usePosition, isSupportTouchEvent } from './utils';\n/**\n * Filter those expanded nodes.\n * @param data\n * @param expandedRowKeys\n * @param rowKey\n * @returns\n */\nvar filterTreeData = function filterTreeData(data, expandedRowKeys, rowKey) {\n  return flattenData(data).filter(function (rowData) {\n    if (rowKey) {\n      var parents = findAllParents(rowData, rowKey);\n      var _expanded = shouldShowRowByExpanded(expandedRowKeys, parents);\n\n      // FIXME This function is supposed to be pure.\n      //       Don't mutate rowData in-place!\n      rowData[EXPANDED_KEY] = _expanded;\n      rowData[TREE_DEPTH] = parents.length;\n      return _expanded;\n    }\n  });\n};\nvar DATA_PLACEHOLDER = [];\nvar Table = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var affixHeader = props.affixHeader,\n    children = props.children,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'rs-table' : _props$classPrefix,\n    className = props.className,\n    _props$data = props.data,\n    dataProp = _props$data === void 0 ? DATA_PLACEHOLDER : _props$data,\n    _props$defaultSortTyp = props.defaultSortType,\n    defaultSortType = _props$defaultSortTyp === void 0 ? SORT_TYPE.DESC : _props$defaultSortTyp,\n    widthProp = props.width,\n    expandedRowKeysProp = props.expandedRowKeys,\n    defaultExpandAllRows = props.defaultExpandAllRows,\n    defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n    style = props.style,\n    id = props.id,\n    isTree = props.isTree,\n    _props$hover = props.hover,\n    hover = _props$hover === void 0 ? true : _props$hover,\n    bordered = props.bordered,\n    cellBordered = props.cellBordered,\n    wordWrap = props.wordWrap,\n    loading = props.loading,\n    _props$locale = props.locale,\n    locale = _props$locale === void 0 ? {\n      emptyMessage: 'No data found',\n      loading: 'Loading...'\n    } : _props$locale,\n    _props$showHeader = props.showHeader,\n    showHeader = _props$showHeader === void 0 ? true : _props$showHeader,\n    sortColumn = props.sortColumn,\n    _props$rowHeight = props.rowHeight,\n    rowHeight = _props$rowHeight === void 0 ? ROW_HEIGHT : _props$rowHeight,\n    sortTypeProp = props.sortType,\n    _props$headerHeight = props.headerHeight,\n    headerHeightProp = _props$headerHeight === void 0 ? ROW_HEADER_HEIGHT : _props$headerHeight,\n    _props$minHeight = props.minHeight,\n    minHeight = _props$minHeight === void 0 ? 0 : _props$minHeight,\n    _props$height = props.height,\n    height = _props$height === void 0 ? 200 : _props$height,\n    autoHeight = props.autoHeight,\n    fillHeight = props.fillHeight,\n    rtlProp = props.rtl,\n    translate3d = props.translate3d,\n    rowKey = props.rowKey,\n    virtualized = props.virtualized,\n    rowClassName = props.rowClassName,\n    _props$rowExpandedHei = props.rowExpandedHeight,\n    rowExpandedHeight = _props$rowExpandedHei === void 0 ? 100 : _props$rowExpandedHei,\n    disabledScroll = props.disabledScroll,\n    affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n    loadAnimation = props.loadAnimation,\n    _props$shouldUpdateSc = props.shouldUpdateScroll,\n    shouldUpdateScroll = _props$shouldUpdateSc === void 0 ? true : _props$shouldUpdateSc,\n    renderRowProp = props.renderRow,\n    renderRowExpandedProp = props.renderRowExpanded,\n    renderLoading = props.renderLoading,\n    renderEmpty = props.renderEmpty,\n    onSortColumn = props.onSortColumn,\n    onScroll = props.onScroll,\n    renderTreeToggle = props.renderTreeToggle,\n    onRowClick = props.onRowClick,\n    onRowContextMenu = props.onRowContextMenu,\n    onExpandChange = props.onExpandChange,\n    onTouchStart = props.onTouchStart,\n    onTouchMove = props.onTouchMove,\n    onTouchEnd = props.onTouchEnd,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix, typeof classPrefix !== 'undefined'),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    mergeCls = _useClassNames.merge,\n    prefix = _useClassNames.prefix;\n\n  // Use `forceUpdate` to force the component to re-render after manipulating the DOM.\n  var _useReducer = useReducer(function (x) {\n      return x + 1;\n    }, 0),\n    forceUpdate = _useReducer[1];\n  var _useControlled = useControlled(expandedRowKeysProp, defaultExpandAllRows ? findRowKeys(dataProp, rowKey, isFunction(renderRowExpandedProp)) : defaultExpandedRowKeys || []),\n    expandedRowKeys = _useControlled[0],\n    setExpandedRowKeys = _useControlled[1];\n  var _useState = useState(function () {\n      return isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp;\n    }),\n    data = _useState[0],\n    setData = _useState[1];\n  if (isTree) {\n    if (!rowKey) {\n      throw new Error('The `rowKey` is required when set isTree');\n    } else if (data.length > 0) {\n      if (!data[0].hasOwnProperty(rowKey)) {\n        throw new Error('The `rowKey` is not found in data');\n      }\n    }\n  }\n  var _useTableRows = useTableRows({\n      data: dataProp,\n      expandedRowKeys: expandedRowKeys,\n      wordWrap: wordWrap,\n      prefix: prefix\n    }),\n    tableRowsMaxHeight = _useTableRows.tableRowsMaxHeight,\n    bindTableRowsRef = _useTableRows.bindTableRowsRef;\n  var headerHeight = showHeader ? headerHeightProp : 0;\n  var rtl = rtlProp || isRTL();\n  var getRowHeight = function getRowHeight() {\n    return typeof rowHeight === 'function' ? rowHeight() : rowHeight;\n  };\n  var translateDOMPositionXY = useRef(getTranslateDOMPositionXY({\n    forceUseTransform: true,\n    enable3DTransform: translate3d\n  }));\n\n  // Check for the existence of fixed columns in all column properties.\n  var shouldFixedColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props;\n    return child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.fixed;\n  });\n\n  // Check all column properties for the existence of rowSpan.\n  var shouldRowSpanColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props2;\n    return child === null || child === void 0 ? void 0 : (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.rowSpan;\n  });\n  var visibleRows = useRef([]);\n  var mouseAreaRef = useRef(null);\n  var tableRef = useRef(null);\n  var tableHeaderRef = useRef(null);\n  var affixHeaderWrapperRef = useRef(null);\n  var headerWrapperRef = useRef(null);\n  var tableBodyRef = useRef(null);\n  var wheelWrapperRef = useRef(null);\n  var scrollbarXRef = useRef(null);\n  var scrollbarYRef = useRef(null);\n  var handleTableResizeChange = function handleTableResizeChange(_prevSize, event) {\n    forceUpdate();\n\n    /**\n     * Reset the position of the scroll bar after the table size changes.\n     */\n    if (typeof shouldUpdateScroll === 'function') {\n      onScrollTo(shouldUpdateScroll(event));\n    } else if (shouldUpdateScroll) {\n      var vertical = event === 'bodyHeightChanged';\n      vertical ? onScrollTop(0) : onScrollLeft(0);\n    }\n    if (event === 'bodyWidthChanged') {\n      deferUpdatePosition();\n    }\n  };\n  var _useTableDimension = useTableDimension({\n      // The data should be flattened,\n      // otherwise the array length required to calculate the scroll height in the TreeTable is not real.\n      data: data,\n      width: widthProp,\n      rowHeight: rowHeight,\n      tableRef: tableRef,\n      headerWrapperRef: headerWrapperRef,\n      prefix: prefix,\n      affixHeader: affixHeader,\n      affixHorizontalScrollbar: affixHorizontalScrollbar,\n      headerHeight: headerHeight,\n      height: height,\n      minHeight: minHeight,\n      autoHeight: autoHeight,\n      fillHeight: fillHeight,\n      children: children,\n      expandedRowKeys: expandedRowKeys,\n      showHeader: showHeader,\n      bordered: bordered,\n      onTableScroll: debounce(function (coords) {\n        return onScrollTo(coords);\n      }, 100),\n      onTableResizeChange: handleTableResizeChange\n    }),\n    contentHeight = _useTableDimension.contentHeight,\n    contentWidth = _useTableDimension.contentWidth,\n    minScrollY = _useTableDimension.minScrollY,\n    minScrollX = _useTableDimension.minScrollX,\n    scrollY = _useTableDimension.scrollY,\n    scrollX = _useTableDimension.scrollX,\n    tableWidth = _useTableDimension.tableWidth,\n    tableOffset = _useTableDimension.tableOffset,\n    headerOffset = _useTableDimension.headerOffset,\n    setScrollY = _useTableDimension.setScrollY,\n    setScrollX = _useTableDimension.setScrollX,\n    getTableHeight = _useTableDimension.getTableHeight;\n  useAffix({\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    affixHeader: affixHeader,\n    tableOffset: tableOffset,\n    headerOffset: headerOffset,\n    headerHeight: headerHeight,\n    scrollbarXRef: scrollbarXRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef\n  });\n  var _usePosition = usePosition({\n      data: dataProp,\n      height: height,\n      tableWidth: tableWidth,\n      tableRef: tableRef,\n      prefix: prefix,\n      translateDOMPositionXY: translateDOMPositionXY,\n      wheelWrapperRef: wheelWrapperRef,\n      headerWrapperRef: headerWrapperRef,\n      affixHeaderWrapperRef: affixHeaderWrapperRef,\n      tableHeaderRef: tableHeaderRef,\n      scrollX: scrollX,\n      scrollY: scrollY,\n      contentWidth: contentWidth,\n      shouldFixedColumn: shouldFixedColumn\n    }),\n    forceUpdatePosition = _usePosition.forceUpdatePosition,\n    deferUpdatePosition = _usePosition.deferUpdatePosition;\n  var _useScrollListener = useScrollListener({\n      rtl: rtl,\n      data: dataProp,\n      height: height,\n      virtualized: virtualized,\n      getTableHeight: getTableHeight,\n      contentHeight: contentHeight,\n      headerHeight: headerHeight,\n      autoHeight: autoHeight,\n      tableBodyRef: tableBodyRef,\n      scrollbarXRef: scrollbarXRef,\n      scrollbarYRef: scrollbarYRef,\n      disabledScroll: disabledScroll,\n      loading: loading,\n      tableRef: tableRef,\n      contentWidth: contentWidth,\n      tableWidth: tableWidth,\n      scrollY: scrollY,\n      minScrollY: minScrollY,\n      minScrollX: minScrollX,\n      scrollX: scrollX,\n      setScrollX: setScrollX,\n      setScrollY: setScrollY,\n      forceUpdatePosition: forceUpdatePosition,\n      deferUpdatePosition: deferUpdatePosition,\n      onScroll: onScroll,\n      onTouchStart: onTouchStart,\n      onTouchMove: onTouchMove,\n      onTouchEnd: onTouchEnd\n    }),\n    isScrolling = _useScrollListener.isScrolling,\n    onScrollHorizontal = _useScrollListener.onScrollHorizontal,\n    onScrollVertical = _useScrollListener.onScrollVertical,\n    onScrollBody = _useScrollListener.onScrollBody,\n    onScrollTop = _useScrollListener.onScrollTop,\n    onScrollLeft = _useScrollListener.onScrollLeft,\n    onScrollTo = _useScrollListener.onScrollTo,\n    onScrollByKeydown = _useScrollListener.onScrollByKeydown;\n  var _useCellDescriptor = useCellDescriptor({\n      children: children,\n      rtl: rtl,\n      mouseAreaRef: mouseAreaRef,\n      tableRef: tableRef,\n      minScrollX: minScrollX,\n      scrollX: scrollX,\n      tableWidth: tableWidth,\n      headerHeight: headerHeight,\n      showHeader: showHeader,\n      sortType: sortTypeProp,\n      defaultSortType: defaultSortType,\n      sortColumn: sortColumn,\n      prefix: prefix,\n      onSortColumn: onSortColumn,\n      // Force table update after column width change, so scrollbar re-renders.\n      onHeaderCellResize: forceUpdate,\n      rowHeight: rowHeight\n    }),\n    headerCells = _useCellDescriptor.headerCells,\n    bodyCells = _useCellDescriptor.bodyCells,\n    allColumnsWidth = _useCellDescriptor.allColumnsWidth,\n    hasCustomTreeCol = _useCellDescriptor.hasCustomTreeCol;\n  var colCounts = useRef((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0);\n  useUpdateEffect(function () {\n    setData(isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp);\n  }, [dataProp, expandedRowKeys, rowKey, isTree]);\n  useUpdateEffect(function () {\n    if ((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) !== colCounts.current) {\n      onScrollLeft(0);\n      colCounts.current = (headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0;\n    }\n  }, [children]);\n  useImperativeHandle(ref, function () {\n    return {\n      get root() {\n        return tableRef.current;\n      },\n      get body() {\n        return wheelWrapperRef.current;\n      },\n      scrollTop: onScrollTop,\n      scrollLeft: onScrollLeft\n    };\n  });\n  var rowWidth = allColumnsWidth > tableWidth.current ? allColumnsWidth : tableWidth.current;\n\n  // Whether to show vertical scroll bar\n  var hasVerticalScrollbar = !autoHeight && contentHeight.current > getTableHeight() - headerHeight;\n\n  // Whether to show the horizontal scroll bar\n  var hasHorizontalScrollbar = contentWidth.current > tableWidth.current;\n  var classes = mergeCls(className, withClassPrefix({\n    bordered: bordered,\n    hover: hover && !shouldRowSpanColumn,\n    loading: loading,\n    treetable: isTree,\n    'word-wrap': wordWrap,\n    'cell-bordered': cellBordered\n  }));\n  var styles = _extends({\n    width: widthProp || 'auto',\n    height: getTableHeight()\n  }, style);\n  var renderRowExpanded = useCallback(function (rowData) {\n    var height = 0;\n    if (typeof rowExpandedHeight === 'function') {\n      height = rowExpandedHeight(rowData);\n    } else {\n      height = rowExpandedHeight;\n    }\n    var styles = {\n      height: height\n    };\n    if (typeof renderRowExpandedProp === 'function') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('row-expanded'),\n        style: styles\n      }, renderRowExpandedProp(rowData));\n    }\n    return null;\n  }, [prefix, renderRowExpandedProp, rowExpandedHeight]);\n  var renderRow = function renderRow(props, cells, shouldRenderExpandedRow, rowData) {\n    var depth = props.depth,\n      rowIndex = props.rowIndex,\n      restRowProps = _objectWithoutPropertiesLoose(props, _excluded2);\n    if (typeof rowClassName === 'function') {\n      restRowProps.className = rowClassName(rowData, rowIndex);\n    } else {\n      restRowProps.className = rowClassName;\n    }\n    var rowStyles = _extends({}, props === null || props === void 0 ? void 0 : props.style);\n    var rowRight = 0;\n    if (rtl && contentWidth.current > tableWidth.current) {\n      rowRight = tableWidth.current - contentWidth.current;\n      rowStyles.right = rowRight;\n    }\n    var rowNode = null;\n\n    // IF there are fixed columns, add a fixed group\n    if (shouldFixedColumn && contentWidth.current > tableWidth.current) {\n      var fixedLeftCells = [];\n      var fixedRightCells = [];\n      var scrollCells = [];\n      var fixedLeftCellGroupWidth = 0;\n      var fixedRightCellGroupWidth = 0;\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        var _cell$props = cell.props,\n          fixed = _cell$props.fixed,\n          width = _cell$props.width;\n        var isFixedStart = fixed === 'left' || fixed === true;\n        var isFixedEnd = fixed === 'right';\n        if (rtl) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n        if (isFixedStart) {\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          scrollCells.push(cell);\n        }\n      }\n      if (hasVerticalScrollbar && fixedRightCellGroupWidth) {\n        fixedRightCellGroupWidth += SCROLLBAR_WIDTH;\n      }\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, fixedLeftCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"left\",\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedLeftCellGroupWidth,\n        style: rtl ? {\n          right: tableWidth.current - fixedLeftCellGroupWidth - rowRight\n        } : undefined\n      }, mergeCells(resetLeftForCells(fixedLeftCells))) : null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(scrollCells)), fixedRightCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"right\",\n        style: rtl ? {\n          right: 0 - rowRight\n        } : {\n          left: tableWidth.current - fixedRightCellGroupWidth\n        },\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedRightCellGroupWidth\n      }, mergeCells(resetLeftForCells(fixedRightCells, hasVerticalScrollbar ? SCROLLBAR_WIDTH : 0))) : null, shouldRenderExpandedRow && renderRowExpanded(rowData));\n    } else {\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(cells)), shouldRenderExpandedRow && renderRowExpanded(rowData));\n    }\n    return /*#__PURE__*/React.createElement(Row, _extends({}, restRowProps, {\n      \"data-depth\": depth,\n      style: rowStyles\n    }), renderRowProp ? renderRowProp(rowNode, rowData) : rowNode);\n  };\n  var renderTableHeader = function renderTableHeader(headerCells, rowWidth) {\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var rowProps = {\n      'aria-rowindex': 1,\n      rowRef: tableHeaderRef,\n      width: rowWidth,\n      height: getRowHeight(),\n      headerHeight: headerHeight,\n      isHeaderRow: true,\n      top: 0,\n      rowIndex: -1\n    };\n    var fixedStyle = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: headerHeight,\n      width: tableWidth.current,\n      top: top\n    };\n\n    // Affix header\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('affix-header'),\n      style: fixedStyle,\n      ref: affixHeaderWrapperRef\n    }, renderRow(rowProps, headerCells));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (affixHeader === 0 || affixHeader) && header, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"rowgroup\",\n      className: prefix('header-row-wrapper'),\n      ref: headerWrapperRef\n    }, renderRow(rowProps, headerCells)));\n  };\n  var shouldRenderExpandedRow = useCallback(function (rowData) {\n    if (isFunction(renderRowExpandedProp) && !isTree && rowKey && expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    })) {\n      return true;\n    }\n    return false;\n  }, [expandedRowKeys, isTree, renderRowExpandedProp, rowKey]);\n  var bindRowClick = useCallback(function (rowData) {\n    return function (event) {\n      onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(rowData, event);\n    };\n  }, [onRowClick]);\n  var bindRowContextMenu = useCallback(function (rowData) {\n    return function (event) {\n      onRowContextMenu === null || onRowContextMenu === void 0 ? void 0 : onRowContextMenu(rowData, event);\n    };\n  }, [onRowContextMenu]);\n  var handleTreeToggle = useCallback(function (treeRowKey, _rowIndex, rowData) {\n    var open = false;\n    var nextExpandedRowKeys = [];\n    for (var i = 0; i < expandedRowKeys.length; i++) {\n      var key = expandedRowKeys[i];\n      if (key === treeRowKey) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    }\n    if (!open) {\n      nextExpandedRowKeys.push(treeRowKey);\n    }\n    setExpandedRowKeys(nextExpandedRowKeys);\n    onExpandChange === null || onExpandChange === void 0 ? void 0 : onExpandChange(!open, rowData);\n  }, [expandedRowKeys, onExpandChange, setExpandedRowKeys]);\n\n  /**\n   * Records the status of merged rows.\n   * { cellKey: [count,index]}\n   */\n  var rowSpanState = useRef({});\n  var renderRowData = function renderRowData(bodyCells, rowData, props, shouldRenderExpandedRow) {\n    var hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    var nextRowKey = rowKey && typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n    var cellHeight = props.cellHeight,\n      restRowProps = _objectWithoutPropertiesLoose(props, _excluded3);\n    var rowProps = _extends({}, restRowProps, {\n      key: nextRowKey,\n      'aria-rowindex': props.key + 2,\n      rowRef: bindTableRowsRef(props.key, rowData),\n      onClick: bindRowClick(rowData),\n      onContextMenu: bindRowContextMenu(rowData)\n    });\n    var expanded = expandedRowKeys.some(function (key) {\n      return rowKey && key === rowData[rowKey];\n    });\n    var cells = [];\n    for (var i = 0; i < bodyCells.length; i++) {\n      var _cell$props2, _cell$props2$rowSpan, _cell$props3, _rowSpanState$current, _cell$props4, _rowSpanState$current2;\n      var cell = bodyCells[i];\n      var rowSpan = (_cell$props2 = cell.props) === null || _cell$props2 === void 0 ? void 0 : (_cell$props2$rowSpan = (_cell$props3 = _cell$props2).rowSpan) === null || _cell$props2$rowSpan === void 0 ? void 0 : _cell$props2$rowSpan.call(_cell$props3, rowData);\n      var dataCellHeight = rowSpan ? rowSpan * (cellHeight || ROW_HEIGHT) : cellHeight;\n      var _cellKey = cell.props.dataKey || i;\n\n      // Record the cell state of the merged row\n      if (((_rowSpanState$current = rowSpanState.current[_cellKey]) === null || _rowSpanState$current === void 0 ? void 0 : _rowSpanState$current[1]) > 0) {\n        rowSpanState.current[_cellKey][1] -= 1;\n\n        // Restart counting when merged to the last cell.\n        if (rowSpanState.current[_cellKey][1] === 0) {\n          rowSpanState.current[_cellKey][0] = 0;\n        }\n      }\n      if (rowSpan) {\n        // The state of the initial merged cell\n        rowSpanState.current[_cellKey] = [rowSpan, rowSpan];\n        rowProps.rowSpan = rowSpan;\n        rowProps.style = {\n          overflow: 'inherit'\n        };\n      }\n\n      // Cells marked as deleted when checking for merged cell.\n      var removedCell = (_cell$props4 = cell.props) !== null && _cell$props4 !== void 0 && _cell$props4.rowSpan && !rowSpan && ((_rowSpanState$current2 = rowSpanState.current[_cellKey]) === null || _rowSpanState$current2 === void 0 ? void 0 : _rowSpanState$current2[0]) !== 0 ? true : false;\n      cells.push( /*#__PURE__*/React.cloneElement(cell, {\n        hasChildren: hasChildren,\n        rowData: rowData,\n        rowIndex: props.rowIndex,\n        wordWrap: wordWrap,\n        height: dataCellHeight,\n        depth: props.depth,\n        renderTreeToggle: renderTreeToggle,\n        onTreeToggle: handleTreeToggle,\n        rowKey: nextRowKey,\n        expanded: expanded,\n        rowSpan: rowSpan,\n        removed: removedCell\n      }));\n    }\n    return renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  };\n  var renderScrollbar = function renderScrollbar() {\n    var height = getTableHeight();\n    if (disabledScroll) {\n      return null;\n    }\n    var scrollbars = [];\n    if (hasHorizontalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        key: \"scrollbar\",\n        tableId: id,\n        style: {\n          width: tableWidth.current\n        },\n        length: tableWidth.current,\n        onScroll: onScrollHorizontal,\n        scrollLength: contentWidth.current,\n        ref: scrollbarXRef\n      }));\n    }\n    if (hasVerticalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        vertical: true,\n        key: \"vertical-scrollbar\",\n        tableId: id,\n        length: height - headerHeight,\n        onScroll: onScrollVertical,\n        scrollLength: contentHeight.current,\n        ref: scrollbarYRef\n      }));\n    }\n    return scrollbars;\n  };\n  var renderTableBody = function renderTableBody(bodyCells, rowWidth) {\n    var _visibleRows$current;\n    var height = getTableHeight();\n    var bodyHeight = height - headerHeight;\n    var bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight\n    };\n    var contentHeight = 0;\n    var topHideHeight = 0;\n    var bottomHideHeight = 0;\n    visibleRows.current = [];\n    if (data) {\n      var _top = 0; // Row position\n      var minTop = Math.abs(scrollY.current);\n      var startHeight = 0;\n      if (typeof rowExpandedHeight === 'function') {\n        startHeight = data.length ? rowExpandedHeight(data[0]) : 100;\n      } else {\n        startHeight = rowExpandedHeight;\n      }\n      var maxTop = minTop + height + startHeight;\n      var isCustomRowHeight = typeof rowHeight === 'function';\n      var isUncertainHeight = !!renderRowExpandedProp || isCustomRowHeight || wordWrap;\n\n      // If virtualized is enabled and the row height in the Table is variable,\n      // you need to loop through the data to get the height of each row.\n      if (isUncertainHeight && virtualized || !virtualized) {\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredHeight = height * 3;\n          minTop = Math.max(minTop - coveredHeight, 0);\n          maxTop = maxTop + coveredHeight;\n        }\n        for (var index = 0; index < data.length; index++) {\n          var _rowData = data[index];\n          var maxHeight = tableRowsMaxHeight[index];\n          var expandedRow = shouldRenderExpandedRow(_rowData);\n          var nextRowHeight = 0;\n          var cellHeight = 0;\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(_rowData);\n            cellHeight = nextRowHeight;\n          } else {\n            nextRowHeight = maxHeight ? Math.max(maxHeight + CELL_PADDING_HEIGHT, rowHeight) : rowHeight;\n            cellHeight = nextRowHeight;\n            if (expandedRow) {\n              // If the row is expanded, the height of the expanded row is added.\n              if (typeof rowExpandedHeight === 'function') {\n                nextRowHeight += rowExpandedHeight(_rowData);\n              } else {\n                nextRowHeight += rowExpandedHeight;\n              }\n            }\n          }\n          contentHeight += nextRowHeight;\n          var rowProps = {\n            key: index,\n            top: _top,\n            rowIndex: index,\n            width: rowWidth,\n            depth: _rowData[TREE_DEPTH],\n            height: nextRowHeight,\n            cellHeight: cellHeight\n          };\n          _top += nextRowHeight;\n          if (virtualized && !wordWrap) {\n            if (_top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (_top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n          visibleRows.current.push(renderRowData(bodyCells, _rowData, rowProps, expandedRow));\n        }\n      } else {\n        /** virtualized */\n\n        // If the row height of the Table is fixed, it is directly calculated by the row height and the number of rows,\n        // thereby reducing the performance cost of traversing all data.\n        var _nextRowHeight = getRowHeight();\n        var startIndex = Math.max(Math.floor(minTop / _nextRowHeight), 0);\n        var endIndex = Math.min(startIndex + Math.ceil(bodyHeight / _nextRowHeight) + 5, data.length);\n\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredCount = Math.floor(height / _nextRowHeight * 3);\n          startIndex = Math.max(startIndex - coveredCount, 0);\n          endIndex = Math.min(endIndex + coveredCount, data.length);\n        }\n        contentHeight = data.length * _nextRowHeight;\n        topHideHeight = startIndex * _nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * _nextRowHeight;\n        for (var _index = startIndex; _index < endIndex; _index++) {\n          var _rowData2 = data[_index];\n          var _rowProps = {\n            key: _index,\n            rowIndex: _index,\n            depth: _rowData2[TREE_DEPTH],\n            top: _index * _nextRowHeight,\n            width: rowWidth,\n            height: _nextRowHeight,\n            cellHeight: _nextRowHeight\n          };\n          visibleRows.current.push(renderRowData(bodyCells, _rowData2, _rowProps, false));\n        }\n      }\n    }\n    var wheelStyles = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined\n    };\n    var topRowStyles = {\n      height: topHideHeight\n    };\n    var bottomRowStyles = {\n      height: bottomHideHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: tableBodyRef,\n      role: \"rowgroup\",\n      className: prefix('body-row-wrapper'),\n      style: bodyStyles,\n      onScroll: onScrollBody\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wheelStyles,\n      className: prefix('body-wheel-area'),\n      ref: wheelWrapperRef\n    }, topHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: topRowStyles,\n      className: \"virtualized\"\n    }) : null, visibleRows.current, bottomHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: bottomRowStyles,\n      className: \"virtualized\"\n    }) : null), /*#__PURE__*/React.createElement(EmptyMessage, {\n      locale: locale,\n      renderEmpty: renderEmpty,\n      addPrefix: prefix,\n      loading: !!((_visibleRows$current = visibleRows.current) !== null && _visibleRows$current !== void 0 && _visibleRows$current.length) || loading\n    }), renderScrollbar(), /*#__PURE__*/React.createElement(Loader, {\n      locale: locale,\n      loadAnimation: loadAnimation,\n      loading: loading,\n      addPrefix: prefix,\n      renderLoading: renderLoading\n    }));\n  };\n  var contextValue = React.useMemo(function () {\n    return {\n      classPrefix: classPrefix,\n      translateDOMPositionXY: translateDOMPositionXY.current,\n      rtl: rtl,\n      isTree: isTree,\n      hasCustomTreeCol: hasCustomTreeCol\n    };\n  }, [classPrefix, hasCustomTreeCol, isTree, rtl]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: isTree ? 'treegrid' : 'grid'\n    // The aria-rowcount is specified on the element with the table.\n    // Its value is an integer equal to the total number of rows available, including header rows.\n    ,\n    \"aria-rowcount\": data.length + 1,\n    \"aria-colcount\": colCounts.current,\n    \"aria-busy\": loading\n  }, rest, {\n    className: classes,\n    style: styles,\n    ref: tableRef,\n    tabIndex: -1,\n    onKeyDown: onScrollByKeydown\n  }), showHeader && renderTableHeader(headerCells, rowWidth), children && renderTableBody(bodyCells, rowWidth), showHeader && /*#__PURE__*/React.createElement(MouseArea, {\n    ref: mouseAreaRef,\n    addPrefix: prefix,\n    headerHeight: headerHeight,\n    height: getTableHeight()\n  })));\n});\nTable.displayName = 'Table';\nTable.propTypes = {\n  autoHeight: PropTypes.bool,\n  fillHeight: PropTypes.bool,\n  affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  bordered: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.any,\n  cellBordered: PropTypes.bool,\n  data: PropTypes.array,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  defaultSortType: PropTypes.any,\n  disabledScroll: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  hover: PropTypes.bool,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  locale: PropTypes.object,\n  loading: PropTypes.bool,\n  loadAnimation: PropTypes.bool,\n  minHeight: PropTypes.number,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  renderTreeToggle: PropTypes.func,\n  renderRowExpanded: PropTypes.func,\n  renderRow: PropTypes.func,\n  rowExpandedHeight: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n  renderEmpty: PropTypes.func,\n  renderLoading: PropTypes.func,\n  rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  rtl: PropTypes.bool,\n  style: PropTypes.object,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.any,\n  showHeader: PropTypes.bool,\n  shouldUpdateScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  translate3d: PropTypes.bool,\n  wordWrap: PropTypes.any,\n  width: PropTypes.number,\n  virtualized: PropTypes.bool,\n  isTree: PropTypes.bool,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onScroll: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  onExpandChange: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}